from sklearn.metrics import classification_report, accuracy_score
import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier,plot_tree

df=pd.read_csv(r"C:\Users\amana\Downloads\zoo_data(For Decision Tree Program).csv")
df

 X=df.drop('1.7',axis=1)
 Y=df["1.7"]
 x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.3,random_state=100)

clf_entropy=DecisionTreeClassifier(criterion='entropy',random_state=100,max_depth=3,min_sampleclf_entropy.fit(x_train,y_train)
y_pred=clf_entropy.predict(x_test)

print('confusion matrix: ',confusion_matrix(y_test,y_pred))
print('classification report: ',classification_report(y_test,y_pred))
print('accuracy: ',accuracy_score(y_test,y_pred)*100)

plt.figure(figsize=(20, 15))
plot_tree( clf_entropy, filled=True)
plt.show()

-----------------------
or
----------------------

import pandas as pd
data = pd.read_csv(r'C:\Users\aksha\Downloads\zoo_data.csv')

data.head()

y=data["1.7"]

import numpy as np
y = np.array(y)
print(y)

x= data.drop(columns=["1.7"])

print(x)

x

x = np.array(x)

x

!pip install scikit-learn


from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier

X_train,X_test,Y_train,Y_test = train_test_split(x,y,test_size=0.3)

X_train,X_test,Y_train,Y_test = train_test_split(x,y,test_size=0.3)

X_test

Y_train

Y_test

inst = DecisionTreeClassifier()
inst = inst.fit(X_train,Y_train)
Y_pred = inst.predict(X_test)

Y_pred

from sklearn import metrics
from sklearn.metrics import precision_recall_fscore_support

acc = metrics.accuracy_score(Y_test,Y_pred)
print(acc)

print("Precision,recall,F score is",precision_recall_fscore_support(Y_test,Y_pred, average ='macro'))

import matplotlib.pyplot as plt
from sklearn import tree

!pip install matplotlib

import matplotlib.pyplot as plt
from sklearn import tree

plt.figure(figsize=(10,10))
tree.plot_tree(inst,fontsize=8)

from sklearn.metrics import confusion_matrix

confusion_matrix(Y_test,Y_pred)

from sklearn.metrics import classification_report

print(classification_report(Y_test, Y_pred))

