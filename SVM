import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_splitn
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

data=pd.read_csv(r"C:\Users\amana\Downloads\glass.csv")
data.head()

x = data.drop('Type',axis = 1)
y = data['Type']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)

model1=SVC(kernel='sigmoid',gamma=0.001)
model2=SVC(kernel='poly',degree=3)
model3=SVC(kernel='rbf')

model1.fit(x_train,y_train)
model2.fit(x_train,y_train)
model3.fit(x_train,y_train)

ypred1=model1.predict(x_test)
ypred2=model2.predict(x_test)
ypred3=model3.predict(x_test)

print(accuracy_score(y_test,ypred1))
print(accuracy_score(y_test,ypred2))
print(accuracy_score(y_test,ypred3))

-------------------------
or
---------------------

from sklearn.svm import SVC
from sklearn import svm
import numpy as np

X=np.array([[3,4],[1,4],[2,3],[6,-1],[7,-1],[5,-3]])
y=np.array([-1,-1,-1,1,1,1]

l=SVC(C=1e5,kernel="linear")
l.fit(X,y)

print("w=",l.coef_)
print("b=",l.intercept_)
print("Indices of support vectors=",l.support_)
print("Support vectors=",l.support_vectors_)
print("No. of support vectors from each class=",l.n_support_)
print("coefficient of support vectors in decision function=",np.abs(l.dual_coef_))

import pandas as pd
data=pd.read_csv("glass.csv")
data.head()
x=data.drop('Type',axis=1)
y=data.Type

data.head()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)

linear=svm.SVC(kernel="linear")
linear.fit(x_train,y_train)
print(linear.support_vectors_)


print("prediction by model1",accuracy_score(y_test,y_pred1))
print("prediction by model2",accuracy_score(y_test,y_pred2))
print("prediction by model3",accuracy_score(y_test,y_pred1))
print(linear.n_support_)
y_pred=linear.predict(x_test)

from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,y_pred))

from sklearn.metrics import confusion_matrix
print(confusion_matrix(y_test,y_pred))

from sklearn.metrics import classification_report
print(classification_report(y_test,y_pred))

model1=SVC(kernel="sigmoid")
model2=SVC(kernel="poly")
model3=SVC(kernel="rbf")

model1.fit(x_train,y_train)
model2.fit(x_train,y_train)
model3.fit(x_train,y_train)

y_pred1=model1.predict(x_test)
y_pred2=model2.predict(x_test)
y_pred3=model3.predict(x_test)

print("prediction by model1",accuracy_score(y_test,y_pred1))
print("prediction by model2",accuracy_score(y_test,y_pred2))
print("prediction by model3",accuracy_score(y_test,y_pred1))



