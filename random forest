import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

data=pd.read_csv(r"C:\Users\amana\Downloads\pima.csv")
data.head()

X = data.drop("Outcome", axis=1)
y = data["Outcome"]

X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.20)

classifier = RandomForestClassifier(n_estimators=100)

classifier.fit(X_train, y_train)

RandomForestClassifier()

y_pred = classifier.predict(X_test)
print(accuracy_score(y_test,y_pred))

feature_importances_df = pd.DataFrame({"feature": list(X.columns), "importance":classifier.feature_importances_})
feature_importances_df

x=data.drop(['Outcome','SkinThickness'],axis=1)
y=data['Outcome']

x_tr,x_te,y_tr,y_te=train_test_split(x,y)
classifier.fit(x_tr,y_tr)
y_pred=classifier.predict(x_te)

print("accuracy: ", accuracy_score(y_te,y_pred))

from sklearn.tree import DecisionTreeClassifier
dt=DecisionTreeClassifier()
dt.fit(x_tr,y_tr)
y_pr=dt.predict(x_te)
print("accuracy: ",accuracy_score(y_te,y_pr))
